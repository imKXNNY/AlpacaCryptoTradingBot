# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Lint, and Test
    runs-on: ubuntu-22.04  # Explicitly specify Ubuntu version

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Cache Poetry dependencies
      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Step 4: Install Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Step 5: Install dependencies using Poetry
      - name: Install Dependencies
        run: poetry install --no-interaction --no-ansi

      # Step 6: Run Pre-Commit Hooks
      - name: Run Pre-Commit Hooks
        run: poetry run pre-commit run --all-files

      # Step 7: Run Tests with Coverage
      - name: Run Tests
        run: poetry run pytest --cov=src --cov-report=xml

      # Step 8: Upload Coverage to Codecov
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  gitguardian_scan:
    name: GitGuardian scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for scanning multiple commits

      # Step 2: Run GitGuardian scan
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@v1.34.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
